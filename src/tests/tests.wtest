import empresa.*
import localidades.*
import usuarios.*
import viajes.*

describe "contextoLastToninasConDescuento25%" {
	fixture{
		barrileteCosmico.aplicarDescuentoALocalidades(0.25)
	}

	test "alAplicarleUn25%DeDescuentoALastToninasSuPrecioQuedaEn2625"{
		assert.equals(2625,lastToninas.getPrecio())
	}
	
	test "verificarQueTengaCerticadoDeDescuento"{
		assert.that(lastToninas.getEquipajes().contains("Certificado de descuento"))
	}
}
describe "contextoDeDestinos"{
	
	test "obtenerLosDestinosMasImportantes" {
		assert.equals([garlicSea,lastToninas],barrileteCosmico.obtenerLasLocalidadesMasImportantes())
	}
	
	test "obtenerLosDestinosMasPeligrosos"{
		assert.equals(["Last Toninas"], barrileteCosmico.conocerLocalidadesPeligrosas())
	}
}

describe "contextoSilversSea"{
	test "silversSeaEsDestinoPeligroso"{
		assert.that(!silverSea.esPeligroso())
	}
}

describe "contextoDeTodosLosDestinos"{
	fixture{
		barrileteCosmico.aplicarDescuentoALocalidades(0.15)
	}
	
	test "aplicarleUn15%DeDescuentoALastToninas"{
		assert.equals(2975,lastToninas.getPrecio())
	}
	
	test "verificarQueTodosLosDestinosTenganCerticadoDeDescuento"{
		assert.that(barrileteCosmico.getLocalidades().any({destino => destino.getEquipajes().contains("Certificado de descuento")}))
	}
	
	test "aplicarleUn15%DeDescuentoAGarlicSea"{
		assert.equals(2125,garlicSea.getPrecio())
	}
	
	test "aplicarleUn15%DeDescuentoASilversSea"{
		assert.equals(1147.5,silverSea.getPrecio())
	}
	
	test "aplicarleUn15%DeDescuentoAGoodAirs"{
		assert.equals(1275,goodAirs.getPrecio())
	}
}

describe "contextoDeBarrileteCosmico"{
	
	test "esUnaEmpresaExtrema"{
		assert.that(barrileteCosmico.esExtrema())
	}
	
	test "conocerLaCartaDeDestinos"{
		assert.equals(["Garlic's Sea","Silver's Sea","Last Toninas","Good Airs"],barrileteCosmico.conocerCartaDeLocalidades())
	}
}

describe "contextoDePabloHari"{
	
	test "pabloHariPuedeVolarASilverSea"{
		assert.that(pabloHari.puedeViajarA(viajeASilverSea))
	}

}

describe "contextoDePabloHariLuegoDeVolarASilverSea"{
	
	fixture{
		pabloHari.realizarUnViaje(viajeASilverSea)
	}
	
	test "pabloTiene1330kmsRecorridos"{
		assert.equals(1330,pabloHari.kilometrosRecorridos())
	}
	
	test "pabloHariSilverSeaEsAgregadoEnSusDestinosConocidos"{
		assert.that(pabloHari.getViajesConocidos().contains(viajeASilverSea))
	}
	
	test "pabloHariTiene8650EnSuCuenta"{
		assert.equals(8650,pabloHari.getDinero())
	}
}




